// #! ü™ß APP JSX

//! IMPORT
//!! BIBLIOTHEQUES
/*
 ? React-router-dom 
 C'est une biblioth√®que JavaScript tr√®s populaire utilis√©e pour g√©rer la navigation dans les applications web construites avec React. Elle vous permet de cr√©er des applications √† pages multiples en g√©rant la navigation entre diff√©rentes vues ou composants de mani√®re tr√®s fluide.
 
 ? Routeurs
 La biblioth√®que react-router-dom propose plusieurs types de routeurs, dont le plus courant est le BrowserRouter. Un routeur est un composant React qui fournit un contexte de navigation √† l'ensemble de votre application. Il g√®re l'URL actuelle et d√©cide quel composant doit √™tre rendu en fonction de cette URL.
 
 ? Routes
 Une route est associ√©e √† une URL sp√©cifique et correspond √† un composant particulier que vous souhaitez rendre lorsque l'URL correspond √† cette route. Les routes sont d√©finies en utilisant le composant <Route>.

 ? Liens
 Les liens <Link> sont utilis√©s pour cr√©er des liens entre diff√©rentes parties de votre application. Lorsqu'un utilisateur clique sur un lien, il est redirig√© vers la route associ√©e sans que la page ne se recharge.
 
 ? Param√®tres de route
 Vous pouvez d√©finir des param√®tres dynamiques dans vos routes pour capturer des valeurs variables dans l'URL. Par exemple, /
 users/:id pourrait √™tre une route pour afficher les d√©tails d'un utilisateur avec un identifiant sp√©cifique.

 ? Redirections
 Vous pouvez utiliser <Redirect> pour rediriger les utilisateurs d'une route √† une autre. Par exemple, si un utilisateur acc√®de √† une page non autoris√©e, vous pouvez le rediriger vers une page de connexion.
 
 ? Navigation programmatique
 En plus de la navigation √† l'aide de liens, vous pouvez √©galement effectuer une navigation programmatique en utilisant l'objet history fourni par react-router-dom. Cela vous permet de naviguer en r√©ponse √† des √©v√©nements ou √† des actions utilisateur sans avoir besoin d'un lien.

 ? Gestion du 404
 Vous pouvez configurer une route sp√©ciale pour g√©rer les cas o√π l'URL ne correspond √† aucune route existante, g√©n√©ralement utilis√©e pour afficher une page d'erreur 404
*/
import { BrowserRouter as Router, Routes, Route} from 'react-router-dom';

//!! JSX
//* FR
import Accueil from './00-accueil/fr/Accueil.jsx';
import Page404 from './00-accueil/fr/Page404.jsx';
// riskgard
import AccueilRiskgard from './01-DEV/RiskGard/fr/RiskgardAccueil.jsx';
import AppRiskgard from './01-DEV/RiskGard/fr/RiskgardApp.jsx';

//* EN
import AccueilEN from './00-accueil/en/Accueil.jsx';
import Page404EN from './00-accueil/en/Page404.jsx';

//!! F()
import { FPrintConsole } from './00-fonctions/FPrint.jsx';

//! APP()
function App() {
  // todo>> console
  const consoleTxt = '.üìë APP';
  FPrintConsole(consoleTxt);

  // todo>> HTML
  return (
    <>
      {/* //todo>> routes application */}
      <Router key="router" id="router">
        <Routes key="routes" id="routes">
          {/* //todo>> page accueil */}
          <Route key="routeAcceuil" path="/" element={<Accueil/>}/>

          {/* //todo>> page riskgard */}
          <Route key='routeRiskGard' path='/riskgard' element={<AccueilRiskgard/>}>
          </Route>

          {/* //todo>> autres pages */}
          {/* //!FR */}
          <Route key='routeAcceuilFR' path='/fr/accueil' element={<Accueil/>}/>

          {/* //*RISKGARD */}
          <Route key='routeRiskgardFR' path='/fr/riskgard' element={<AccueilRiskgard/>}/>
          <Route key='routeAppRiskgardFR' path='/fr/riskgard/app' element={<AppRiskgard/>}></Route>
          <Route key='routeDocRiskgardFR' path='/fr/riskgard/app/documentation' element={<AppRiskgard title="Documentation"/>}/>
          <Route key='routeDetecteurRiskgardFR' path='/fr/riskgard/app/detecteur' element={<AppRiskgard title="D√©tecteur"/>}/>
          <Route key='routeECGRiskgardFR' path='/fr/riskgard/app/ecg' element={<AppRiskgard title="Imagerie ECG"/>}/>
          <Route key='routeInfosRiskgardFR' path='/fr/riskgard/app/infos' element={<AppRiskgard title="Infos"/>}/>
          <Route key='routeAdminRiskgardFR' path='/fr/riskgard/app/admin' element={<AppRiskgard title="Administration"/>}/>

          {/* //!EN */}
          <Route key='routeAcceuilEN' path='/en/accueil' element={<AccueilEN/>}/>

          {/* //todo>> page 404 */}
          <Route key="route404" path="/*" element={<Page404/>}/>
          <Route key="route404" path="/fr/*" element={<Page404/>}/>
          <Route key="route404" path="/en/*" element={<Page404EN/>}/>
        </Routes>
      </Router>
    </>
  )
}

//! EXPORT
export default App;